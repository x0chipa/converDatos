/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conver;

import javax.swing.JOptionPane;

/**
 *
 * @author David Uriel Ramirez Xochipa 201918749
 */
public class conversionDatos extends javax.swing.JFrame {

    /**
     * Creates new form xd
     */
    public conversionDatos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcbFuente = new javax.swing.JComboBox<>();
        jcbDestino = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfFuente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jtfDestino = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jcbFuente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "float", "string", "double", "long", "short", "boolean", "char", "byte" }));
        jcbFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFuenteActionPerformed(evt);
            }
        });

        jcbDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "int", "float", "string", "double", "long", "short", "boolean", "char", "byte" }));
        jcbDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDestinoActionPerformed(evt);
            }
        });

        jLabel1.setText("Dato fuente");

        jLabel2.setText("Dato destino");

        jtfFuente.setName("jtfFuente"); // NOI18N
        jtfFuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfFuenteActionPerformed(evt);
            }
        });

        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jcbFuente, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfFuente)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtfDestino, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jcbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfFuente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFuenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbFuenteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        long Lmax = Long.MAX_VALUE, Lmin = Long.MIN_VALUE;
        int Imax = Integer.MAX_VALUE, Imin = Integer.MIN_VALUE;
        short Smax = Short.MAX_VALUE, Smin = Short.MIN_VALUE;
        byte Bmax = Byte.MAX_VALUE, Bmin = Byte.MIN_VALUE;
        float Fmax = Float.MAX_VALUE, Fmin = Float.MIN_VALUE;
        double Dmax = Double.MAX_VALUE, Dmin = Double.MIN_VALUE;
        
    
        switch(jcbFuente.getSelectedIndex()){
            case 0: 
                int numero;
                switch(jcbDestino.getSelectedIndex()){
                    case 0://int
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+numero);   
                        }catch(NumberFormatException ex2){
                                JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 1://float
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(float)numero);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 2://string
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+numero);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 3://double
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(double)numero);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 4://long
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(long)numero);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 5://short
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            if(numero <= Smax && numero >= Smin){
                                jtfDestino.setText(""+(short)numero);
                            }else{
                                JOptionPane.showMessageDialog(null,"No quepo :'v");
                            }
                            
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 6://boolean
                            JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;
                    case 7://char
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(char)numero);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 8://byte
                        try{
                            numero = Integer.valueOf(jtfFuente.getText());
                            if(numero <= Bmax && numero >= Bmin){
                                jtfDestino.setText(""+(byte)numero);    
                            }else{
                                JOptionPane.showMessageDialog(null,"No quepo :'v");
                            }
                            
                        break;
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                    default: break;
                }
                break;
            case 1: //FLOAT
                float flotante;
                switch(jcbDestino.getSelectedIndex()){
                   case 0://int
                       try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(int)flotante); 
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 1://float
                        try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+flotante);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 2://string
                        try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+flotante);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 3://double
                        try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            if(flotante <= Dmax && flotante >= Dmin){
                                jtfDestino.setText(""+(double)flotante);
                            }else{
                                JOptionPane.showMessageDialog(null,"No quepo :'v");
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 4://long
                        try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(long)flotante);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 5://short
                        try{
                            if (Short.valueOf(jtfFuente.getText()) <= Smax && Short.valueOf(jtfFuente.getText()) >= Smin){
                                flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(short)flotante);
                            }else{
                                JOptionPane.showMessageDialog(null,"No quepo :'v");
                            }
                            
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 6: //boolean
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;
                    case 7://char
                        try{
                            flotante = Float.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(char)flotante);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 8://byte
                        try{
                            if (Byte.valueOf(jtfFuente.getText()) <= Bmax && Byte.valueOf(jtfFuente.getText()) >= Bmin){
                                flotante = Float.valueOf(jtfFuente.getText());
                                jtfDestino.setText(""+(byte)flotante);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\no no cabe");
                        }
                        break;
                    default: break;
                }
                break;
            case 2://STRING
                switch(jcbDestino.getSelectedIndex()){
                    case 0://int
                        try{
                            if(Integer.valueOf(jtfFuente.getText()) <= Imax && Integer.valueOf(jtfFuente.getText()) >= Imin){
                                jtfDestino.setText(""+Integer.valueOf(jtfFuente.getText()));
                            }else{
                                JOptionPane.showMessageDialog(null,"no quepo");
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 1://float
                        try{
                            if (Float.valueOf(jtfFuente.getText()) >=  Fmin && Float.valueOf(jtfFuente.getText()) <= Fmax){
                                jtfDestino.setText(""+Float.valueOf(jtfFuente.getText()));
                            }   
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 2://string
                        try{
                            jtfDestino.setText(jtfFuente.getText());    
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 3://double
                        try{
                            if(Double.valueOf(jtfFuente.getText()) >= Dmin && Double.valueOf(jtfFuente.getText()) >= Dmax){
                                jtfDestino.setText(""+Double.valueOf(jtfFuente.getText()));
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 4://long
                        try{
                            if(Long.valueOf(jtfFuente.getText()) >= Lmin && Long.valueOf(jtfFuente.getText()) >= Lmax){
                                jtfDestino.setText(""+Long.valueOf(jtfFuente.getText()));
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 5://short
                        try{
                            if(Short.valueOf(jtfFuente.getText()) >= Smin && Short.valueOf(jtfFuente.getText()) >= Smax){
                                jtfDestino.setText(""+Short.valueOf(jtfFuente.getText()));
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 6://boolean
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        break;
                    case 7://char
                        try{
                            jtfDestino.setText(""+(jtfFuente.getText().charAt(0)));
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido");
                        }
                        break;
                    case 8://byte
                        try{
                            if(Byte.valueOf(jtfFuente.getText()) >= Bmin && Byte.valueOf(jtfFuente.getText()) >= Bmax){
                                jtfDestino.setText(""+Byte.valueOf(jtfFuente.getText()));
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    default: break;
                }
                break;
            case 3://DOUBLE
                double doble;
                switch(jcbDestino.getSelectedIndex()){
                    case 0://int
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            if((int)doble >= Imin && (int)doble <= Imax){
                                jtfDestino.setText(""+(int)doble);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        
                        
                        break;
                    case 1://float    
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            if((float)doble >= Fmin && (float)doble <= Fmax){
                                jtfDestino.setText(""+(float)doble);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;//float
                    case 2://string
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+doble); 
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 3://double
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+doble);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 4://long
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(long)doble);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 5://short
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            if((short)doble >= Smin && (short)doble <= Smax){
                                jtfDestino.setText(""+(short)doble);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    case 6://boolean
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;
                    case 7://char
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(char)doble);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 8://byte
                        try{
                            doble = Double.valueOf(jtfFuente.getText());
                            if((byte)doble >= Bmin && (byte)doble <= Bmax){
                                jtfDestino.setText(""+(byte)doble);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    default: break;
                }
                break;
            case 4://LONG
                long largo;
                switch(jcbDestino.getSelectedIndex()){
                    case 0://int
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            if((int)largo >= Imin && (int)largo <= Imax){
                                jtfDestino.setText(""+(int)largo);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    case 1://float                        
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            if((float)largo >= Fmin && (float)largo <= Fmax){
                                jtfDestino.setText(""+(float)largo);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    case 2://string
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+largo);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 3://double
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            if((double)largo >= Dmin && (double)largo <= Dmax){
                                jtfDestino.setText(""+(double)largo);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    case 4://long
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+largo);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 5://short
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            if((short)largo >= Smin && (short)largo <= Smax){
                                jtfDestino.setText(""+(short)largo);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    case 6://boolean
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;
                    case 7://char
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(char)largo);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 8://byte
                        try{
                            largo = Long.valueOf(jtfFuente.getText());
                            if((byte)largo >= Bmin && (byte)largo <= Bmax){
                                jtfDestino.setText(""+(byte)largo);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    default: break;
                }
                break;
            case 5://SHORT
                short corto;
                switch(jcbDestino.getSelectedIndex()){
                    case 0://int
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(int)corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 1://float
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(float)corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 2://string
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 3://double
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(double)corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 4://long
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(long)corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 5://short
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 6://boolean
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;
                    case 7://char
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            jtfDestino.setText(""+(char)corto);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;
                    case 8://byte
                        try{
                            corto = Short.valueOf(jtfFuente.getText());
                            if((byte)corto >= Bmin && (byte)corto <= Bmax){
                                jtfDestino.setText(""+(byte)corto);
                            }
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o no cabe");
                        }
                        break;
                    default: break;
                }
                break;
            case 6://BOOLEAN
                switch(jcbDestino.getSelectedIndex()){
                    case 0:case 1:case 2:case 3:case 4:case 5:case 7:case 8:
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;//byte
                    case 6:
                        boolean val;
                        if(null == jtfFuente.getText()){
                            JOptionPane.showMessageDialog(null,"La variable boolean\nsolo admite\ntrue\nfalse");
                        }else switch (jtfFuente.getText()) {
                        case "true":
                            val = true;
                            jtfDestino.setText(""+val);
                            break;
                        case "false":
                            val = false;
                            jtfDestino.setText(""+val);
                            break;
                        default:
                            JOptionPane.showMessageDialog(null,"La variable boolean\nsolo admite\ntrue\nfalse");
                            break;
                        }
                        break;
                    default: break;
                }
                break;
            case 7://CHAR
                if(jtfFuente.getText().length() == 1){
                    char caracter = jtfFuente.getText().charAt(0);
                    switch(jcbDestino.getSelectedIndex()){  
                        case 0:
                            jtfDestino.setText(""+(int)caracter);
                            break;//int
                        case 1:
                            jtfDestino.setText(""+(float)caracter);
                            break;//float
                        case 2:
                            jtfDestino.setText(""+jtfFuente.getText());
                            break;//string
                        case 3:
                            jtfDestino.setText(""+(double)caracter);
                            break;//double
                        case 4:
                            jtfDestino.setText(""+(long)caracter);
                            break;//long
                        case 5:
                            jtfDestino.setText(""+(short)caracter);
                            break;//short
                        case 6:
                            JOptionPane.showMessageDialog(null,"Error de conversion");
                            break;//boolean
                        case 7:
                            jtfDestino.setText(""+caracter);
                            break;//char
                        case 8:
                            jtfDestino.setText(""+(byte)caracter);
                            break;//byte
                        default: break;
                    }
                }else{
                    JOptionPane.showMessageDialog(null,"por favor ingrese solo un caracter");
                }
                break;
            case 8://BYTE
                byte bite;
                switch(jcbDestino.getSelectedIndex()){
                    case 0:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+(int)bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//int
                    case 1:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+(float)bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//float
                    case 2:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//string
                    case 3:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+(double)bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//double
                    case 4:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+(long)bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//long
                    case 5:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+(short)bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//short
                    case 6:
                        JOptionPane.showMessageDialog(null,"Error de conversion");
                        break;//boolean
                    case 7:
                        try{    
                        bite = Byte.valueOf(jtfFuente.getText());
                       jtfDestino.setText(""+(char)bite);
                       }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//char
                    case 8:
                        try{
                        bite = Byte.valueOf(jtfFuente.getText());
                        jtfDestino.setText(""+bite);
                        }catch(NumberFormatException ex2){
                            JOptionPane.showMessageDialog(null,"El dato que ingreso no es valido\n o se encuentra fuera del limite");
                        }
                        break;//byte
                    default: break;
                }
                break;
            default: break;
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtfFuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfFuenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfFuenteActionPerformed

    private void jcbDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDestinoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(conversionDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(conversionDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(conversionDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(conversionDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new conversionDatos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> jcbDestino;
    private javax.swing.JComboBox<String> jcbFuente;
    private javax.swing.JTextField jtfDestino;
    private javax.swing.JTextField jtfFuente;
    // End of variables declaration//GEN-END:variables
}
